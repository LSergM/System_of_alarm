

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jun 10 14:01:54 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	12F629
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	swtext1,local,class=CONST,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x5E,2
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F629 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0019                     	;# 
    63  0081                     	;# 
    64  0085                     	;# 
    65  008C                     	;# 
    66  008E                     	;# 
    67  0090                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0096                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0019                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  008C                     	;# 
    94  008E                     	;# 
    95  0090                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0096                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000E                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0019                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  008C                     	;# 
   122  008E                     	;# 
   123  0090                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0096                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0019                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  008C                     	;# 
   150  008E                     	;# 
   151  0090                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0096                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0019                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  008C                     	;# 
   178  008E                     	;# 
   179  0090                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0096                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  0019                     _CMCONbits	set	25
   190  0010                     _T1CONbits	set	16
   191  0005                     _GPIObits	set	5
   192  000C                     _PIR1bits	set	12
   193  0099                     _VRCON	set	153
   194  0085                     _TRISIObits	set	133
   195  0095                     _WPUbits	set	149
   196                           
   197                           ; #config settings
   198  0000                     
   199                           	psect	cinit
   200  0010                     start_initialization:	
   201  0010                     __initialization:	
   202  0010                     end_of_initialization:	
   203                           ;End of C runtime variable initialization code
   204                           
   205  0010                     __end_of__initialization:	
   206  0010  0183               	clrf	3
   207  0011  2812               	ljmp	_main	;jump to C main() function
   208                           
   209                           	psect	cstackCOMMON
   210  0000                     __pcstackCOMMON:	
   211  0000                     ??_ConfigureOscillator:	
   212  0000                     ??_InitApp:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           	psect	cstackBANK0
   217  0020                     __pcstackBANK0:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0020                     ?_ConfigureOscillator:	
   221  0020                     ?_InitApp:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0020                     ?_isr:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0020                     ??_isr:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0020                     ?_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233                           
   234                           ; 1 bytes @ 0x0
   235  0020                     	ds	4
   236  0024                     ??_main:	
   237                           
   238                           ; 1 bytes @ 0x4
   239  0024                     	ds	1
   240  0025                     main@system_state:	
   241                           
   242                           ; 1 bytes @ 0x5
   243  0025                     	ds	1
   244  0026                     main@timer:	
   245                           
   246                           ; 1 bytes @ 0x6
   247  0026                     	ds	1
   248                           
   249                           	psect	maintext
   250  0012                     __pmaintext:	
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 47 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  timer           1    6[BANK0 ] unsigned char 
   261 ;;  system_state    1    5[BANK0 ] unsigned char 
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : B00/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMMON   BANK0
   271 ;;      Params:         0       0
   272 ;;      Locals:         0       2
   273 ;;      Temps:          0       1
   274 ;;      Totals:         0       3
   275 ;;Total ram usage:        3 bytes
   276 ;; Hardware stack levels required when called:    2
   277 ;; This function calls:
   278 ;;		_ConfigureOscillator
   279 ;;		_InitApp
   280 ;; This function is called by:
   281 ;;		Startup code after reset
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           
   286                           ;psect for function _main
   287  0012                     _main:	
   288                           
   289                           ;main.c: 49: enum {
   290                           ;main.c: 50: WITHOUT_PROTECT = 0,
   291                           ;main.c: 51: STARTING_FIST_SIREN = 1,
   292                           ;main.c: 52: STARTING_SECOND_SIREN = 2,
   293                           ;main.c: 53: STARTING = 3,
   294                           ;main.c: 54: AT_THE_GUARD = 4,
   295                           ;main.c: 55: STOPPING_FIST_SIREN = 5,
   296                           ;main.c: 56: STOPPING_SECOND_SIREN = 6,
   297                           ;main.c: 57: STOPPING = 7,
   298                           ;main.c: 58: };
   299                           ;main.c: 60: uint8_t system_state = STARTING_FIST_SIREN;
   300                           
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   303  0012  1283               	bcf	3,5	;RP0=0, select bank0
   304  0013  01A5               	clrf	main@system_state
   305  0014  0AA5               	incf	main@system_state,f
   306                           
   307                           ;main.c: 61: uint8_t timer = 0;
   308  0015  01A6               	clrf	main@timer
   309                           
   310                           ;main.c: 63: ConfigureOscillator();
   311  0016  20AA               	fcall	_ConfigureOscillator
   312                           
   313                           ;main.c: 66: InitApp();
   314  0017  207D               	fcall	_InitApp
   315  0018  286E               	goto	l703
   316  0019                     l705:	
   317                           
   318                           ;main.c: 71: {
   319                           ;main.c: 72: PIR1bits.TMR1IF = 0;
   320  0019  100C               	bcf	12,0	;volatile
   321                           
   322                           ;main.c: 73: if (timer) timer--;
   323  001A  0826               	movf	main@timer,w
   324  001B  1903               	btfsc	3,2
   325  001C  2871               	goto	l759
   326  001D  3001               	movlw	1
   327  001E  02A6               	subwf	main@timer,f
   328                           
   329                           ;main.c: 74: }
   330                           ;main.c: 76: switch(system_state)
   331  001F  2871               	goto	l759
   332  0020                     l22:	
   333                           ;main.c: 77: {
   334                           ;main.c: 78: case WITHOUT_PROTECT:
   335                           
   336                           
   337                           ;main.c: 79: GPIObits.GP1 = 0;
   338  0020  1085               	bcf	5,1	;volatile
   339                           
   340                           ;main.c: 80: if((GPIObits.GP5 == 0))
   341  0021  1A85               	btfsc	5,5	;volatile
   342  0022  286E               	goto	l703
   343                           
   344                           ;main.c: 81: {
   345                           ;main.c: 82: timer = 1;
   346  0023  01A6               	clrf	main@timer
   347  0024  0AA6               	incf	main@timer,f
   348                           
   349                           ;main.c: 83: system_state = STARTING_FIST_SIREN;
   350  0025  01A5               	clrf	main@system_state
   351  0026  0AA5               	incf	main@system_state,f
   352                           
   353                           ;main.c: 84: }
   354                           ;main.c: 85: break;
   355  0027  286E               	goto	l703
   356  0028                     l25:	
   357                           ;main.c: 86: case STARTING_FIST_SIREN:
   358                           
   359                           
   360                           ;main.c: 87: GPIObits.GP1 = 1;
   361  0028  1485               	bsf	5,1	;volatile
   362                           
   363                           ;main.c: 88: if (0 == timer)
   364  0029  0826               	movf	main@timer,w
   365  002A  1D03               	btfss	3,2
   366  002B  286E               	goto	l703
   367                           
   368                           ;main.c: 89: {
   369                           ;main.c: 90: timer = 255;
   370  002C  30FF               	movlw	255
   371  002D  00A4               	movwf	??_main
   372  002E  0824               	movf	??_main,w
   373  002F  00A6               	movwf	main@timer
   374                           
   375                           ;main.c: 91: system_state = STARTING_SECOND_SIREN;
   376  0030  3002               	movlw	2
   377  0031  2866               	goto	L5
   378  0032                     l27:	
   379                           ;main.c: 94: case STARTING_SECOND_SIREN:
   380                           
   381                           ;main.c: 92: }
   382                           ;main.c: 93: break;
   383                           
   384                           
   385                           ;main.c: 95: GPIObits.GP1 = 0;
   386  0032  1085               	bcf	5,1	;volatile
   387                           
   388                           ;main.c: 96: GPIObits.GP0 = 1;
   389  0033  1405               	bsf	5,0	;volatile
   390                           
   391                           ;main.c: 97: if (0 == timer)
   392  0034  0826               	movf	main@timer,w
   393  0035  1D03               	btfss	3,2
   394  0036  286E               	goto	l703
   395                           
   396                           ;main.c: 98: {
   397                           ;main.c: 99: timer = 1;
   398  0037  01A6               	clrf	main@timer
   399  0038  0AA6               	incf	main@timer,f
   400                           
   401                           ;main.c: 100: system_state = STARTING;
   402  0039  3003               	movlw	3
   403  003A  2866               	goto	L5
   404  003B                     l29:	
   405                           ;main.c: 103: case STARTING:
   406                           
   407                           ;main.c: 101: }
   408                           ;main.c: 102: break;
   409                           
   410                           
   411                           ;main.c: 104: GPIObits.GP1 = 1;
   412  003B  1485               	bsf	5,1	;volatile
   413                           
   414                           ;main.c: 105: if (0 == timer)
   415  003C  0826               	movf	main@timer,w
   416  003D  1D03               	btfss	3,2
   417  003E  286E               	goto	l703
   418                           
   419                           ;main.c: 106: {
   420                           ;main.c: 107: system_state = AT_THE_GUARD;
   421  003F  3004               	movlw	4
   422  0040  2866               	goto	L5
   423  0041                     l727:	
   424                           ;main.c: 110: case AT_THE_GUARD:
   425                           
   426                           ;main.c: 108: }
   427                           ;main.c: 109: break;
   428                           
   429                           
   430                           ;main.c: 111: if (timer) GPIObits.GP1 = 1;
   431  0041  0826               	movf	main@timer,w
   432  0042  1903               	btfsc	3,2
   433  0043  2846               	goto	l32
   434  0044  1485               	bsf	5,1	;volatile
   435  0045  2847               	goto	l33
   436  0046                     l32:	
   437                           
   438                           ;main.c: 112: else GPIObits.GP1 = 0;
   439  0046  1085               	bcf	5,1	;volatile
   440  0047                     l33:	
   441                           
   442                           ;main.c: 113: if((GPIObits.GP2 == 0) && !timer)
   443  0047  1905               	btfsc	5,2	;volatile
   444  0048  2850               	goto	l735
   445  0049  0826               	movf	main@timer,w
   446  004A  1D03               	btfss	3,2
   447  004B  2850               	goto	l735
   448                           
   449                           ;main.c: 114: {
   450                           ;main.c: 115: timer = 191;
   451  004C  30BF               	movlw	191
   452  004D  00A4               	movwf	??_main
   453  004E  0824               	movf	??_main,w
   454  004F  00A6               	movwf	main@timer
   455  0050                     l735:	
   456                           
   457                           ;main.c: 116: }
   458                           ;main.c: 117: if((GPIObits.GP4 == 0))
   459  0050  1A05               	btfsc	5,4	;volatile
   460  0051  286E               	goto	l703
   461                           
   462                           ;main.c: 118: {
   463                           ;main.c: 119: timer = 1;
   464  0052  01A6               	clrf	main@timer
   465  0053  0AA6               	incf	main@timer,f
   466                           
   467                           ;main.c: 120: system_state = STOPPING_FIST_SIREN;
   468  0054  3005               	movlw	5
   469  0055  2866               	goto	L5
   470  0056                     l36:	
   471                           ;main.c: 123: case STOPPING_FIST_SIREN:
   472                           
   473                           ;main.c: 121: }
   474                           ;main.c: 122: break;
   475                           
   476                           
   477                           ;main.c: 124: GPIObits.GP1 = 1;
   478  0056  1485               	bsf	5,1	;volatile
   479                           
   480                           ;main.c: 125: GPIObits.GP0 = 0;
   481  0057  1005               	bcf	5,0	;volatile
   482                           
   483                           ;main.c: 126: if (0 == timer)
   484  0058  0826               	movf	main@timer,w
   485  0059  1D03               	btfss	3,2
   486  005A  286E               	goto	l703
   487                           
   488                           ;main.c: 127: {
   489                           ;main.c: 128: timer = 1;
   490  005B  01A6               	clrf	main@timer
   491  005C  0AA6               	incf	main@timer,f
   492                           
   493                           ;main.c: 129: system_state = STOPPING_SECOND_SIREN;
   494  005D  3006               	movlw	6
   495  005E  2866               	goto	L5
   496  005F                     l38:	
   497                           ;main.c: 132: case STOPPING_SECOND_SIREN:
   498                           
   499                           ;main.c: 130: }
   500                           ;main.c: 131: break;
   501                           
   502                           
   503                           ;main.c: 133: GPIObits.GP1 = 0;
   504  005F  1085               	bcf	5,1	;volatile
   505                           
   506                           ;main.c: 134: if (0 == timer)
   507  0060  0826               	movf	main@timer,w
   508  0061  1D03               	btfss	3,2
   509  0062  286E               	goto	l703
   510                           
   511                           ;main.c: 135: {
   512                           ;main.c: 136: timer = 1;
   513  0063  01A6               	clrf	main@timer
   514  0064  0AA6               	incf	main@timer,f
   515                           
   516                           ;main.c: 137: system_state = STOPPING;
   517  0065  3007               	movlw	7
   518  0066                     L5:	
   519  0066  00A4               	movwf	??_main
   520  0067  0824               	movf	??_main,w
   521  0068  00A5               	movwf	main@system_state
   522                           
   523                           ;main.c: 138: }
   524                           ;main.c: 139: break;
   525  0069  286E               	goto	l703
   526  006A                     l40:	
   527                           ;main.c: 140: case STOPPING:
   528                           
   529                           
   530                           ;main.c: 141: GPIObits.GP1 = 1;
   531  006A  1485               	bsf	5,1	;volatile
   532                           
   533                           ;main.c: 142: if (0 == timer)
   534  006B  0826               	movf	main@timer,w
   535  006C  1903               	btfsc	3,2
   536                           
   537                           ;main.c: 143: {
   538                           ;main.c: 144: system_state = WITHOUT_PROTECT;
   539  006D  01A5               	clrf	main@system_state
   540  006E                     l703:	
   541                           ;main.c: 68: while(1)
   542                           
   543                           ;main.c: 150: }
   544                           
   545                           ;main.c: 149: break;
   546                           
   547                           ;main.c: 147: default:
   548                           
   549                           ;main.c: 145: }
   550                           ;main.c: 146: break;
   551                           
   552                           
   553                           ;main.c: 69: {
   554                           ;main.c: 70: if(PIR1bits.TMR1IF)
   555  006E  1283               	bcf	3,5	;RP0=0, select bank0
   556  006F  180C               	btfsc	12,0	;volatile
   557  0070  2819               	goto	l705
   558  0071                     l759:	
   559  0071  0825               	movf	main@system_state,w
   560                           
   561                           ; Switch size 1, requested type "space"
   562                           ; Number of cases is 8, Range of values is 0 to 7
   563                           ; switch strategies available:
   564                           ; Name         Instructions Cycles
   565                           ; direct_byte           14     6 (fixed)
   566                           ; simple_byte           25    13 (average)
   567                           ; jumptable            260     6 (fixed)
   568                           ;	Chosen strategy is direct_byte
   569  0072  0084               	movwf	4
   570  0073  3008               	movlw	8
   571  0074  0204               	subwf	4,w
   572  0075  1803               	skipnc
   573  0076  286E               	goto	l703
   574  0077  3000               	movlw	high S797
   575  0078  008A               	movwf	10
   576  0079  30A2               	movlw	low S797
   577  007A  0704               	addwf	4,w
   578  007B  0082               	movwf	2
   579  007C  286E               	goto	l703
   580  007D                     __end_of_main:	
   581                           
   582                           	psect	swtext1
   583  00A2                     __pswtext1:	
   584  00A2                     S797:	
   585  00A2  2820               	ljmp	l22
   586  00A3  2828               	ljmp	l25
   587  00A4  2832               	ljmp	l27
   588  00A5  283B               	ljmp	l29
   589  00A6  2841               	ljmp	l727
   590  00A7  2856               	ljmp	l36
   591  00A8  285F               	ljmp	l38
   592  00A9  286A               	ljmp	l40
   593                           
   594                           	psect	text1
   595  007D                     __ptext1:	
   596 ;; *************** function _InitApp *****************
   597 ;; Defined at:
   598 ;;		line 22 in file "user.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0
   612 ;;      Params:         0       0
   613 ;;      Locals:         0       0
   614 ;;      Temps:          0       0
   615 ;;      Totals:         0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _InitApp
   628  007D                     _InitApp:	
   629                           
   630                           ;user.c: 29: T1CONbits.TMR1GE = 0;
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in _InitApp: [wreg+status,2+status,0]
   634  007D  1283               	bcf	3,5	;RP0=0, select bank0
   635  007E  1310               	bcf	16,6	;volatile
   636                           
   637                           ;user.c: 30: T1CONbits.T1CKPS = 2;
   638  007F  0810               	movf	16,w	;volatile
   639  0080  39CF               	andlw	-49
   640  0081  3820               	iorlw	32
   641  0082  0090               	movwf	16	;volatile
   642                           
   643                           ;user.c: 31: T1CONbits.T1OSCEN = 0;
   644  0083  1190               	bcf	16,3	;volatile
   645                           
   646                           ;user.c: 32: T1CONbits.nT1SYNC = 0;
   647  0084  1110               	bcf	16,2	;volatile
   648                           
   649                           ;user.c: 33: T1CONbits.TMR1CS = 0;
   650  0085  1090               	bcf	16,1	;volatile
   651                           
   652                           ;user.c: 34: T1CONbits.TMR1ON = 1;
   653  0086  1410               	bsf	16,0	;volatile
   654                           
   655                           ;user.c: 37: WPUbits.WPU0 = 1;
   656  0087  1683               	bsf	3,5	;RP0=1, select bank1
   657  0088  1415               	bsf	21,0	;volatile
   658                           
   659                           ;user.c: 38: WPUbits.WPU1 = 1;
   660  0089  1495               	bsf	21,1	;volatile
   661                           
   662                           ;user.c: 39: WPUbits.WPU2 = 1;
   663  008A  1515               	bsf	21,2	;volatile
   664                           
   665                           ;user.c: 40: WPUbits.WPU4 = 1;
   666  008B  1615               	bsf	21,4	;volatile
   667                           
   668                           ;user.c: 41: WPUbits.WPU5 = 1;
   669  008C  1695               	bsf	21,5	;volatile
   670                           
   671                           ;user.c: 43: TRISIObits.TRISIO0 = 0;
   672  008D  1005               	bcf	5,0	;volatile
   673                           
   674                           ;user.c: 44: TRISIObits.TRISIO1 = 0;
   675  008E  1085               	bcf	5,1	;volatile
   676                           
   677                           ;user.c: 45: TRISIObits.TRISIO2 = 1;
   678  008F  1505               	bsf	5,2	;volatile
   679                           
   680                           ;user.c: 46: TRISIObits.TRISIO4 = 1;
   681  0090  1605               	bsf	5,4	;volatile
   682                           
   683                           ;user.c: 47: TRISIObits.TRISIO5 = 1;
   684  0091  1685               	bsf	5,5	;volatile
   685                           
   686                           ;user.c: 49: VRCON = 0;
   687  0092  0199               	clrf	25	;volatile
   688                           
   689                           ;user.c: 50: CMCONbits.CM = 7;
   690  0093  3007               	movlw	7
   691  0094  1283               	bcf	3,5	;RP0=0, select bank0
   692  0095  0499               	iorwf	25,f	;volatile
   693  0096  0008               	return
   694  0097                     __end_of_InitApp:	
   695                           
   696                           	psect	text2
   697  00AA                     __ptext2:	
   698 ;; *************** function _ConfigureOscillator *****************
   699 ;; Defined at:
   700 ;;		line 18 in file "system.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		None
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0
   714 ;;      Params:         0       0
   715 ;;      Locals:         0       0
   716 ;;      Temps:          0       0
   717 ;;      Totals:         0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _ConfigureOscillator
   730  00AA                     _ConfigureOscillator:	
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in _ConfigureOscillator: []
   734  00AA  0008               	return
   735  00AB                     __end_of_ConfigureOscillator:	
   736                           
   737                           	psect	text3
   738  0097                     __ptext3:	
   739 ;; *************** function _isr *****************
   740 ;; Defined at:
   741 ;;		line 23 in file "interrupts.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		None
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0
   755 ;;      Params:         0       0
   756 ;;      Locals:         0       0
   757 ;;      Temps:          0       4
   758 ;;      Totals:         0       4
   759 ;;Total ram usage:        4 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		Interrupt level 1
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _isr
   770  0097                     _isr:	
   771  0097  0823               	movf	??_isr+3,w
   772  0098  00DF               	movwf	95
   773  0099  0822               	movf	??_isr+2,w
   774  009A  008A               	movwf	10
   775  009B  0821               	movf	??_isr+1,w
   776  009C  0084               	movwf	4
   777  009D  0E20               	swapf	??_isr^0,w
   778  009E  0083               	movwf	3
   779  009F  0EDE               	swapf	94,f
   780  00A0  0E5E               	swapf	94,w
   781  00A1  0009               	retfie
   782  00A2                     __end_of_isr:	
   783  005E                     btemp	set	94	;btemp
   784  005E                     wtemp0	set	94
   785                           
   786                           	psect	intentry
   787  0004                     __pintentry:	
   788                           ;incstack = 0
   789                           ; Regs used in _isr: []
   790                           
   791  0004                     interrupt_function:	
   792  005E                     saved_w	set	btemp
   793  0004  00DE               	movwf	btemp
   794  0005  0E03               	swapf	3,w
   795  0006  1283               	bcf	3,5	;RP0=0, select bank0
   796  0007  00A0               	movwf	??_isr
   797  0008  0804               	movf	4,w
   798  0009  00A1               	movwf	??_isr+1
   799  000A  080A               	movf	10,w
   800  000B  00A2               	movwf	??_isr+2
   801  000C  085F               	movf	btemp+1,w
   802  000D  00A3               	movwf	??_isr+3
   803  000E  2897               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7       7

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     238
                                              4 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      7       7       4       11.3%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jun 10 14:01:54 2017

                           pc 0002                   __CFG_CP$OFF 0000                            l22 0020  
                          l40 006A                            l32 0046                            l33 0047  
                          l25 0028                            l27 0032                            l36 0056  
                          l29 003B                            l38 005F                            fsr 0004  
                         S797 00A2                           l703 006E                           l705 0019  
                         l735 0050                           l727 0041                           l759 0071  
                __CFG_CPD$OFF 0000                           _isr 0097                           fsr0 0004  
                        ?_isr 0020                          _main 0012                          btemp 005E  
               __CFG_BOREN$ON 0000                          start 000F               __end_of_InitApp 0097  
                       ??_isr 0020                         ?_main 0020                 __CFG_WDTE$OFF 0000  
                       _VRCON 0099           _ConfigureOscillator 00AA                 __CFG_PWRTE$ON 0000  
                       pclath 000A                         status 0003                         wtemp0 005E  
        ?_ConfigureOscillator 0020                __CFG_MCLRE$OFF 0000               __initialization 0010  
                __end_of_main 007D              main@system_state 0025                        ??_main 0024  
                   ??_InitApp 0000         ??_ConfigureOscillator 0000                        saved_w 005E  
     __end_of__initialization 0010                __pcstackCOMMON 0000                    __pmaintext 0012  
                  __pintentry 0004                       _WPUbits 0095                       _InitApp 007D  
                   _CMCONbits 0019                       __ptext1 007D                       __ptext2 00AA  
                     __ptext3 0097                     _T1CONbits 0010                  __size_of_isr 000B  
        end_of_initialization 0010   __end_of_ConfigureOscillator 00AB           start_initialization 0010  
                 __end_of_isr 00A2                     ___latbits 0000                 __pcstackBANK0 0020  
                    ?_InitApp 0020                     __pswtext1 00A2             interrupt_function 0004  
                    _GPIObits 0005                      _PIR1bits 000C                     main@timer 0026  
            __size_of_InitApp 001A                 __size_of_main 006B  __size_of_ConfigureOscillator 0001  
                    intlevel1 0000             __CFG_FOSC$INTRCIO 0000                    _TRISIObits 0085  
