

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jul 08 12:24:09 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	12F629
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	swtext1,local,class=CONST,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x5E,2
    17  0000                     
    18                           ; Version 1.42
    19                           ; Generated 13/04/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F629 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0019                     	;# 
    66  0081                     	;# 
    67  0085                     	;# 
    68  008C                     	;# 
    69  008E                     	;# 
    70  0090                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0096                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0019                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0096                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0019                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  0090                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0019                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  008C                     	;# 
   153  008E                     	;# 
   154  0090                     	;# 
   155  0095                     	;# 
   156  0096                     	;# 
   157  0096                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009A                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0019                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  008C                     	;# 
   181  008E                     	;# 
   182  0090                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0096                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192                           
   193                           	psect	strings
   194  0161                     __pstrings:	
   195  0161                     stringtab:	
   196  0161                     __stringtab:	
   197  0161                     stringcode:	
   198                           ;	String table - string pointers are 1 byte each
   199                           
   200  0161                     stringdir:	
   201  0161  3001               	movlw	high stringdir
   202  0162  008A               	movwf	10
   203  0163  0804               	movf	4,w
   204  0164  0A84               	incf	4,f
   205  0165  0782               	addwf	2,f
   206  0166                     __stringbase:	
   207  0166  3400               	retlw	0
   208  0167                     __end_of__stringtab:	
   209  0167                     _num_in:	
   210  0167  3404               	retlw	4
   211  0168  3410               	retlw	16
   212  0169  3420               	retlw	32
   213  016A                     __end_of_num_in:	
   214  0019                     _CMCONbits	set	25
   215  0010                     _T1CONbits	set	16
   216  0005                     _GPIO	set	5
   217  0005                     _GPIObits	set	5
   218  000C                     _PIR1bits	set	12
   219  0099                     _VRCON	set	153
   220  0085                     _TRISIObits	set	133
   221  0095                     _WPUbits	set	149
   222  0081                     _OPTION_REG	set	129
   223                           
   224                           ; #config settings
   225  0000                     
   226                           	psect	cinit
   227  0010                     start_initialization:	
   228  0010                     __initialization:	
   229                           
   230                           ; Clear objects allocated to BANK0
   231  0010  01AD               	clrf	__pbssBANK0& (0+127)
   232  0011  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   233  0012  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   234  0013  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   235  0014  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   236  0015  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   237  0016  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   238  0017  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   239  0018  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   240  0019                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  0019                     __end_of__initialization:	
   244  0019  0183               	clrf	3
   245  001A  281B               	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssBANK0
   248  002D                     __pbssBANK0:	
   249  002D                     unharitate@cnt:	
   250  002D                     	ds	8
   251  0035                     unharitate@in_state:	
   252  0035                     	ds	1
   253                           
   254                           	psect	cstackCOMMON
   255  0000                     __pcstackCOMMON:	
   256  0000                     ??_ConfigureOscillator:	
   257  0000                     ??_InitApp:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           	psect	cstackBANK0
   262  0020                     __pcstackBANK0:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0020                     ?_ConfigureOscillator:	
   266  0020                     ?_InitApp:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0020                     ?_unharitate:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0020                     ?_isr:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0020                     ??_isr:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0020                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283  0020                     	ds	4
   284  0024                     ??_unharitate:	
   285                           
   286                           ; 1 bytes @ 0x4
   287  0024                     	ds	3
   288  0027                     unharitate@i:	
   289                           
   290                           ; 1 bytes @ 0x7
   291  0027                     	ds	1
   292  0028                     ??_main:	
   293                           
   294                           ; 1 bytes @ 0x8
   295  0028                     	ds	1
   296  0029                     main@system_state:	
   297                           
   298                           ; 1 bytes @ 0x9
   299  0029                     	ds	1
   300  002A                     main@inputs:	
   301                           
   302                           ; 1 bytes @ 0xA
   303  002A                     	ds	1
   304  002B                     main@timer:	
   305                           
   306                           ; 2 bytes @ 0xB
   307  002B                     	ds	2
   308                           
   309                           	psect	maintext
   310  001B                     __pmaintext:	
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   313 ;;
   314 ;; *************** function _main *****************
   315 ;; Defined at:
   316 ;;		line 63 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;  timer           2   11[BANK0 ] unsigned int 
   321 ;;  inputs          1   10[BANK0 ] unsigned char 
   322 ;;  system_state    1    9[BANK0 ] unsigned char 
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : B00/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0
   332 ;;      Params:         0       0
   333 ;;      Locals:         0       4
   334 ;;      Temps:          0       1
   335 ;;      Totals:         0       5
   336 ;;Total ram usage:        5 bytes
   337 ;; Hardware stack levels required when called:    3
   338 ;; This function calls:
   339 ;;		_ConfigureOscillator
   340 ;;		_InitApp
   341 ;;		_unharitate
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           
   348                           ;psect for function _main
   349  001B                     _main:	
   350                           
   351                           ;main.c: 65: enum {
   352                           ;main.c: 66: WITHOUT_PROTECT = 0,
   353                           ;main.c: 67: STARTING_FIST_SIREN = 1,
   354                           ;main.c: 68: STARTING_SECOND_SIREN = 2,
   355                           ;main.c: 69: STARTING = 3,
   356                           ;main.c: 70: AT_THE_GUARD = 4,
   357                           ;main.c: 71: STOPPING_FIST_SIREN = 5,
   358                           ;main.c: 72: STOPPING_SECOND_SIREN = 6,
   359                           ;main.c: 73: STOPPING = 7,
   360                           ;main.c: 74: };
   361                           ;main.c: 76: uint8_t system_state = STARTING_FIST_SIREN;
   362                           
   363                           ;incstack = 0
   364                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   365  001B  1283               	bcf	3,5	;RP0=0, select bank0
   366  001C  01A9               	clrf	main@system_state
   367  001D  0AA9               	incf	main@system_state,f
   368                           
   369                           ;main.c: 77: uint8_t inputs = 0;
   370  001E  01AA               	clrf	main@inputs
   371                           
   372                           ;main.c: 78: uint16_t timer = 0;
   373  001F  01AB               	clrf	main@timer
   374  0020  01AC               	clrf	main@timer+1
   375                           
   376                           ;main.c: 80: ConfigureOscillator();
   377  0021  2172               	fcall	_ConfigureOscillator
   378                           
   379                           ;main.c: 83: InitApp();
   380  0022  213A               	fcall	_InitApp
   381                           
   382                           ;main.c: 95: switch(system_state)
   383  0023  2895               	goto	l817
   384  0024                     l28:	
   385                           ;main.c: 96: {
   386                           ;main.c: 97: case WITHOUT_PROTECT:
   387                           
   388                           
   389                           ;main.c: 98: GPIObits.GP1 = 0;
   390  0024  1085               	bcf	5,1	;volatile
   391                           
   392                           ;main.c: 99: if((inputs & num_in[2]))
   393  0025  3003               	movlw	low (((_num_in+2)-__stringbase)| (0+32768))
   394  0026  0084               	movwf	4
   395  0027  2161               	fcall	stringdir
   396  0028  052A               	andwf	main@inputs,w
   397  0029  1903               	btfsc	3,2
   398  002A  2895               	goto	l817
   399                           
   400                           ;main.c: 100: {
   401                           ;main.c: 101: timer = 2;
   402  002B  3002               	movlw	2
   403  002C  00AB               	movwf	main@timer
   404  002D  3000               	movlw	0
   405  002E  00AC               	movwf	main@timer+1
   406                           
   407                           ;main.c: 102: system_state = STARTING_FIST_SIREN;
   408  002F  01A9               	clrf	main@system_state
   409  0030  0AA9               	incf	main@system_state,f
   410                           
   411                           ;main.c: 103: }
   412                           ;main.c: 104: break;
   413  0031  2895               	goto	l817
   414  0032                     l31:	
   415                           ;main.c: 105: case STARTING_FIST_SIREN:
   416                           
   417                           
   418                           ;main.c: 106: GPIObits.GP1 = 1;
   419  0032  1485               	bsf	5,1	;volatile
   420                           
   421                           ;main.c: 107: if (0 == timer)
   422  0033  082B               	movf	main@timer,w
   423  0034  042C               	iorwf	main@timer+1,w
   424  0035  1D03               	btfss	3,2
   425  0036  2895               	goto	l817
   426                           
   427                           ;main.c: 108: {
   428                           ;main.c: 109: timer = 200;
   429  0037  30C8               	movlw	200
   430  0038  00AB               	movwf	main@timer
   431  0039  3000               	movlw	0
   432  003A  00AC               	movwf	main@timer+1
   433                           
   434                           ;main.c: 110: system_state = STARTING_SECOND_SIREN;
   435  003B  3002               	movlw	2
   436  003C  288C               	goto	L5
   437  003D                     l33:	
   438                           ;main.c: 113: case STARTING_SECOND_SIREN:
   439                           
   440                           ;main.c: 111: }
   441                           ;main.c: 112: break;
   442                           
   443                           
   444                           ;main.c: 114: GPIObits.GP1 = 0;
   445  003D  1085               	bcf	5,1	;volatile
   446                           
   447                           ;main.c: 115: GPIObits.GP0 = 1;
   448  003E  1405               	bsf	5,0	;volatile
   449                           
   450                           ;main.c: 116: if (0 == timer)
   451  003F  082B               	movf	main@timer,w
   452  0040  042C               	iorwf	main@timer+1,w
   453  0041  1D03               	btfss	3,2
   454  0042  286A               	goto	l859
   455                           
   456                           ;main.c: 117: {
   457                           ;main.c: 118: timer = 2;
   458  0043  3002               	movlw	2
   459  0044  00AB               	movwf	main@timer
   460  0045  3000               	movlw	0
   461  0046  00AC               	movwf	main@timer+1
   462                           
   463                           ;main.c: 119: system_state = STARTING;
   464  0047  3003               	movlw	3
   465  0048  00A8               	movwf	??_main
   466  0049  0828               	movf	??_main,w
   467  004A  00A9               	movwf	main@system_state
   468  004B  286A               	goto	l859
   469  004C                     l36:	
   470                           ;main.c: 127: case STARTING:
   471                           
   472                           ;main.c: 125: }
   473                           ;main.c: 126: break;
   474                           
   475                           ;main.c: 124: system_state = STOPPING_FIST_SIREN;
   476                           
   477                           ;main.c: 122: {
   478                           ;main.c: 123: timer = 2;
   479                           
   480                           ;main.c: 120: }
   481                           ;main.c: 121: if((inputs & num_in[1]))
   482                           
   483                           
   484                           ;main.c: 128: GPIObits.GP1 = 1;
   485  004C  1485               	bsf	5,1	;volatile
   486                           
   487                           ;main.c: 129: if (0 == timer)
   488  004D  082B               	movf	main@timer,w
   489  004E  042C               	iorwf	main@timer+1,w
   490  004F  1D03               	btfss	3,2
   491  0050  2895               	goto	l817
   492                           
   493                           ;main.c: 130: {
   494                           ;main.c: 131: system_state = AT_THE_GUARD;
   495  0051  3004               	movlw	4
   496  0052  288C               	goto	L5
   497  0053                     l849:	
   498                           ;main.c: 134: case AT_THE_GUARD:
   499                           
   500                           ;main.c: 132: }
   501                           ;main.c: 133: break;
   502                           
   503                           
   504                           ;main.c: 135: if (timer) GPIObits.GP1 = 1;
   505  0053  082B               	movf	main@timer,w
   506  0054  042C               	iorwf	main@timer+1,w
   507  0055  1903               	btfsc	3,2
   508  0056  2859               	goto	l39
   509  0057  1485               	bsf	5,1	;volatile
   510  0058  285A               	goto	l853
   511  0059                     l39:	
   512                           
   513                           ;main.c: 136: else GPIObits.GP1 = 0;
   514  0059  1085               	bcf	5,1	;volatile
   515  005A                     l853:	
   516                           
   517                           ;main.c: 137: if((inputs & num_in[0]) && !timer)
   518  005A  3001               	movlw	low (_num_in-__stringbase)
   519  005B  0084               	movwf	4
   520  005C  2161               	fcall	stringdir
   521  005D  00A8               	movwf	??_main
   522  005E  082A               	movf	main@inputs,w
   523  005F  0528               	andwf	??_main,w
   524  0060  1903               	btfsc	3,2
   525  0061  286A               	goto	l859
   526  0062  082B               	movf	main@timer,w
   527  0063  042C               	iorwf	main@timer+1,w
   528  0064  1D03               	btfss	3,2
   529  0065  286A               	goto	l859
   530                           
   531                           ;main.c: 138: {
   532                           ;main.c: 139: timer = 300;
   533  0066  302C               	movlw	44
   534  0067  00AB               	movwf	main@timer
   535  0068  3001               	movlw	1
   536  0069  00AC               	movwf	main@timer+1
   537  006A                     l859:	
   538                           
   539                           ;main.c: 140: }
   540                           ;main.c: 141: if((inputs & num_in[1]))
   541  006A  3002               	movlw	low (((_num_in+1)-__stringbase)| (0+32768))
   542  006B  0084               	movwf	4
   543  006C  2161               	fcall	stringdir
   544  006D  052A               	andwf	main@inputs,w
   545  006E  1903               	btfsc	3,2
   546  006F  2895               	goto	l817
   547                           
   548                           ;main.c: 142: {
   549                           ;main.c: 143: timer = 2;
   550  0070  3002               	movlw	2
   551  0071  00AB               	movwf	main@timer
   552  0072  3000               	movlw	0
   553  0073  00AC               	movwf	main@timer+1
   554                           
   555                           ;main.c: 144: system_state = STOPPING_FIST_SIREN;
   556  0074  3005               	movlw	5
   557  0075  288C               	goto	L5
   558  0076                     l43:	
   559                           ;main.c: 147: case STOPPING_FIST_SIREN:
   560                           
   561                           ;main.c: 145: }
   562                           ;main.c: 146: break;
   563                           
   564                           
   565                           ;main.c: 148: GPIObits.GP1 = 1;
   566  0076  1485               	bsf	5,1	;volatile
   567                           
   568                           ;main.c: 149: GPIObits.GP0 = 0;
   569  0077  1005               	bcf	5,0	;volatile
   570                           
   571                           ;main.c: 150: if (0 == timer)
   572  0078  082B               	movf	main@timer,w
   573  0079  042C               	iorwf	main@timer+1,w
   574  007A  1D03               	btfss	3,2
   575  007B  2895               	goto	l817
   576                           
   577                           ;main.c: 151: {
   578                           ;main.c: 152: timer = 2;
   579  007C  3002               	movlw	2
   580  007D  00AB               	movwf	main@timer
   581  007E  3000               	movlw	0
   582  007F  00AC               	movwf	main@timer+1
   583                           
   584                           ;main.c: 153: system_state = STOPPING_SECOND_SIREN;
   585  0080  3006               	movlw	6
   586  0081  288C               	goto	L5
   587  0082                     l45:	
   588                           ;main.c: 156: case STOPPING_SECOND_SIREN:
   589                           
   590                           ;main.c: 154: }
   591                           ;main.c: 155: break;
   592                           
   593                           
   594                           ;main.c: 157: GPIObits.GP1 = 0;
   595  0082  1085               	bcf	5,1	;volatile
   596                           
   597                           ;main.c: 158: if (0 == timer)
   598  0083  082B               	movf	main@timer,w
   599  0084  042C               	iorwf	main@timer+1,w
   600  0085  1D03               	btfss	3,2
   601  0086  2895               	goto	l817
   602                           
   603                           ;main.c: 159: {
   604                           ;main.c: 160: timer = 2;
   605  0087  3002               	movlw	2
   606  0088  00AB               	movwf	main@timer
   607  0089  3000               	movlw	0
   608  008A  00AC               	movwf	main@timer+1
   609                           
   610                           ;main.c: 161: system_state = STOPPING;
   611  008B  3007               	movlw	7
   612  008C                     L5:	
   613  008C  00A8               	movwf	??_main
   614  008D  0828               	movf	??_main,w
   615  008E  00A9               	movwf	main@system_state
   616                           
   617                           ;main.c: 162: }
   618                           ;main.c: 163: break;
   619  008F  2895               	goto	l817
   620  0090                     l47:	
   621                           ;main.c: 164: case STOPPING:
   622                           
   623                           
   624                           ;main.c: 165: GPIObits.GP1 = 1;
   625  0090  1485               	bsf	5,1	;volatile
   626                           
   627                           ;main.c: 166: if (0 == timer)
   628  0091  082B               	movf	main@timer,w
   629  0092  042C               	iorwf	main@timer+1,w
   630  0093  1903               	btfsc	3,2
   631                           
   632                           ;main.c: 167: {
   633                           ;main.c: 168: system_state = WITHOUT_PROTECT;
   634  0094  01A9               	clrf	main@system_state
   635  0095                     l817:	
   636                           ;main.c: 85: while(1)
   637                           
   638                           ;main.c: 174: }
   639                           
   640                           ;main.c: 173: break;
   641                           
   642                           ;main.c: 171: default:
   643                           
   644                           ;main.c: 169: }
   645                           ;main.c: 170: break;
   646                           
   647                           
   648                           ;main.c: 86: {
   649                           ;main.c: 87: if(PIR1bits.TMR1IF)
   650  0095  1283               	bcf	3,5	;RP0=0, select bank0
   651  0096  1C0C               	btfss	12,0	;volatile
   652  0097  28A3               	goto	l825
   653                           
   654                           ;main.c: 88: {
   655                           ;main.c: 89: PIR1bits.TMR1IF = 0;
   656  0098  100C               	bcf	12,0	;volatile
   657                           
   658                           ;main.c: 90: if (timer) timer--;
   659  0099  082B               	movf	main@timer,w
   660  009A  042C               	iorwf	main@timer+1,w
   661  009B  1903               	btfsc	3,2
   662  009C  28A3               	goto	l825
   663  009D  3001               	movlw	1
   664  009E  02AB               	subwf	main@timer,f
   665  009F  3000               	movlw	0
   666  00A0  1C03               	skipc
   667  00A1  03AC               	decf	main@timer+1,f
   668  00A2  02AC               	subwf	main@timer+1,f
   669  00A3                     l825:	
   670                           
   671                           ;main.c: 91: }
   672                           ;main.c: 93: inputs = unharitate();
   673  00A3  20B4               	fcall	_unharitate
   674  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   675  00A5  00A8               	movwf	??_main
   676  00A6  0828               	movf	??_main,w
   677  00A7  00AA               	movwf	main@inputs
   678  00A8  0829               	movf	main@system_state,w
   679                           
   680                           ; Switch size 1, requested type "space"
   681                           ; Number of cases is 8, Range of values is 0 to 7
   682                           ; switch strategies available:
   683                           ; Name         Instructions Cycles
   684                           ; direct_byte           14     6 (fixed)
   685                           ; simple_byte           25    13 (average)
   686                           ; jumptable            260     6 (fixed)
   687                           ;	Chosen strategy is direct_byte
   688  00A9  0084               	movwf	4
   689  00AA  3008               	movlw	8
   690  00AB  0204               	subwf	4,w
   691  00AC  1803               	skipnc
   692  00AD  2895               	goto	l817
   693  00AE  3001               	movlw	high S915
   694  00AF  008A               	movwf	10
   695  00B0  306A               	movlw	low S915
   696  00B1  0704               	addwf	4,w
   697  00B2  0082               	movwf	2
   698  00B3  2895               	goto	l817
   699  00B4                     __end_of_main:	
   700                           
   701                           	psect	swtext1
   702  016A                     __pswtext1:	
   703  016A                     S915:	
   704  016A  2824               	ljmp	l28
   705  016B  2832               	ljmp	l31
   706  016C  283D               	ljmp	l33
   707  016D  284C               	ljmp	l36
   708  016E  2853               	ljmp	l849
   709  016F  2876               	ljmp	l43
   710  0170  2882               	ljmp	l45
   711  0171  2890               	ljmp	l47
   712                           
   713                           	psect	text1
   714  00B4                     __ptext1:	
   715 ;; *************** function _unharitate *****************
   716 ;; Defined at:
   717 ;;		line 178 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  i               1    7[BANK0 ] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      unsigned char 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0
   731 ;;      Params:         0       0
   732 ;;      Locals:         0       1
   733 ;;      Temps:          0       3
   734 ;;      Totals:         0       4
   735 ;;Total ram usage:        4 bytes
   736 ;; Hardware stack levels used:    2
   737 ;; Hardware stack levels required when called:    1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function _unharitate
   747  00B4                     _unharitate:	
   748                           
   749                           ;main.c: 180: static uint16_t cnt[3U+1];
   750                           ;main.c: 181: static uint8_t in_state = 0;
   751                           ;main.c: 182: uint8_t i = 0;
   752                           
   753                           ;incstack = 0
   754                           ; Regs used in _unharitate: [wreg-fsr0h+status,2+status,0+pclath]
   755  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   756  00B5  01A7               	clrf	unharitate@i
   757                           
   758                           ;main.c: 184: for (i=0; i<3U; i++)
   759  00B6  01A7               	clrf	unharitate@i
   760  00B7  3003               	movlw	3
   761  00B8  0227               	subwf	unharitate@i,w
   762  00B9  1803               	btfsc	3,0
   763  00BA  28F2               	goto	l785
   764  00BB                     l773:	
   765                           
   766                           ;main.c: 185: {
   767                           ;main.c: 186: if( !(GPIO & num_in[i]) )
   768  00BB  0827               	movf	unharitate@i,w
   769  00BC  3E01               	addlw	low ((_num_in-__stringbase)| (0+32768))
   770  00BD  0084               	movwf	4
   771  00BE  2161               	fcall	stringdir
   772  00BF  0505               	andwf	5,w	;volatile
   773  00C0  1D03               	btfss	3,2
   774  00C1  28CE               	goto	l777
   775                           
   776                           ;main.c: 187: cnt[i]++;
   777  00C2  0827               	movf	unharitate@i,w
   778  00C3  00A4               	movwf	??_unharitate
   779  00C4  0724               	addwf	??_unharitate,w
   780  00C5  3E2D               	addlw	(low (unharitate@cnt| 0))& (0+255)
   781  00C6  0084               	movwf	4
   782  00C7  3001               	movlw	1
   783  00C8  1383               	bcf	3,7	;select IRP bank0
   784  00C9  0780               	addwf	0,f
   785  00CA  0A84               	incf	4,f
   786  00CB  1803               	skipnc
   787  00CC  0A80               	incf	0,f
   788  00CD  28EA               	goto	l781
   789  00CE                     l777:	
   790                           
   791                           ;main.c: 188: else if (cnt[i]) cnt[i]--;
   792  00CE  0827               	movf	unharitate@i,w
   793  00CF  00A4               	movwf	??_unharitate
   794  00D0  0724               	addwf	??_unharitate,w
   795  00D1  3E2D               	addlw	(low (unharitate@cnt| 0))& (0+255)
   796  00D2  0084               	movwf	4
   797  00D3  1383               	bcf	3,7	;select IRP bank0
   798  00D4  0800               	movf	0,w
   799  00D5  00A5               	movwf	??_unharitate+1
   800  00D6  0A84               	incf	4,f
   801  00D7  0800               	movf	0,w
   802  00D8  00A6               	movwf	??_unharitate+2
   803  00D9  0825               	movf	??_unharitate+1,w
   804  00DA  0426               	iorwf	??_unharitate+2,w
   805  00DB  1903               	btfsc	3,2
   806  00DC  28EA               	goto	l781
   807  00DD  0827               	movf	unharitate@i,w
   808  00DE  00A4               	movwf	??_unharitate
   809  00DF  0724               	addwf	??_unharitate,w
   810  00E0  3E2D               	addlw	(low (unharitate@cnt| 0))& (0+255)
   811  00E1  0084               	movwf	4
   812  00E2  3001               	movlw	1
   813  00E3  0280               	subwf	0,f
   814  00E4  0F84               	incfsz	4,f
   815  00E5  3000               	movlw	0
   816  00E6  1C03               	skipc
   817  00E7  0380               	decf	0,f
   818  00E8  0280               	subwf	0,f
   819  00E9  0384               	decf	4,f
   820  00EA                     l781:	
   821  00EA  3001               	movlw	1
   822  00EB  00A4               	movwf	??_unharitate
   823  00EC  0824               	movf	??_unharitate,w
   824  00ED  07A7               	addwf	unharitate@i,f
   825  00EE  3003               	movlw	3
   826  00EF  0227               	subwf	unharitate@i,w
   827  00F0  1C03               	skipc
   828  00F1  28BB               	goto	l773
   829  00F2                     l785:	
   830                           
   831                           ;main.c: 189: }
   832                           ;main.c: 190: if(++cnt[3] > 60000U)
   833  00F2  3001               	movlw	1
   834  00F3  07B3               	addwf	unharitate@cnt+6,f
   835  00F4  1803               	skipnc
   836  00F5  0AB4               	incf	unharitate@cnt+7,f
   837  00F6  3000               	movlw	0
   838  00F7  07B4               	addwf	unharitate@cnt+7,f
   839  00F8  30EA               	movlw	234
   840  00F9  0234               	subwf	unharitate@cnt+7,w
   841  00FA  3061               	movlw	97
   842  00FB  1903               	skipnz
   843  00FC  0233               	subwf	unharitate@cnt+6,w
   844  00FD  1C03               	skipc
   845  00FE  2938               	goto	l805
   846                           
   847                           ;main.c: 191: {
   848                           ;main.c: 192: cnt[3] = 0;
   849  00FF  01B3               	clrf	unharitate@cnt+6
   850  0100  01B4               	clrf	unharitate@cnt+7
   851                           
   852                           ;main.c: 193: for (i=0; i<3U; i++)
   853  0101  01A7               	clrf	unharitate@i
   854  0102  3003               	movlw	3
   855  0103  0227               	subwf	unharitate@i,w
   856  0104  1803               	btfsc	3,0
   857  0105  2938               	goto	l805
   858  0106                     l793:	
   859                           
   860                           ;main.c: 194: {
   861                           ;main.c: 195: if(cnt[i] > 50000U) in_state |= num_in[i];
   862  0106  0827               	movf	unharitate@i,w
   863  0107  00A4               	movwf	??_unharitate
   864  0108  0724               	addwf	??_unharitate,w
   865  0109  3E2D               	addlw	(low (unharitate@cnt| 0))& (0+255)
   866  010A  0084               	movwf	4
   867  010B  1383               	bcf	3,7	;select IRP bank0
   868  010C  0800               	movf	0,w
   869  010D  00A5               	movwf	??_unharitate+1
   870  010E  0A84               	incf	4,f
   871  010F  0800               	movf	0,w
   872  0110  00A6               	movwf	??_unharitate+2
   873  0111  30C3               	movlw	195
   874  0112  0226               	subwf	??_unharitate+2,w
   875  0113  3051               	movlw	81
   876  0114  1903               	skipnz
   877  0115  0225               	subwf	??_unharitate+1,w
   878  0116  1C03               	skipc
   879  0117  2920               	goto	l797
   880  0118  0827               	movf	unharitate@i,w
   881  0119  3E01               	addlw	low ((_num_in-__stringbase)| (0+32768))
   882  011A  0084               	movwf	4
   883  011B  2161               	fcall	stringdir
   884  011C  00A4               	movwf	??_unharitate
   885  011D  0824               	movf	??_unharitate,w
   886  011E  04B5               	iorwf	unharitate@in_state,f
   887  011F  2928               	goto	l799
   888  0120                     l797:	
   889                           
   890                           ;main.c: 196: else in_state &= ~num_in[i];
   891  0120  0827               	movf	unharitate@i,w
   892  0121  3E01               	addlw	low ((_num_in-__stringbase)| (0+32768))
   893  0122  0084               	movwf	4
   894  0123  2161               	fcall	stringdir
   895  0124  3AFF               	xorlw	255
   896  0125  00A4               	movwf	??_unharitate
   897  0126  0824               	movf	??_unharitate,w
   898  0127  05B5               	andwf	unharitate@in_state,f
   899  0128                     l799:	
   900                           
   901                           ;main.c: 197: cnt[i] = 0;
   902  0128  0827               	movf	unharitate@i,w
   903  0129  00A4               	movwf	??_unharitate
   904  012A  0724               	addwf	??_unharitate,w
   905  012B  3E2D               	addlw	(low (unharitate@cnt| 0))& (0+255)
   906  012C  0084               	movwf	4
   907  012D  0180               	clrf	0
   908  012E  0A84               	incf	4,f
   909  012F  0180               	clrf	0
   910  0130  3001               	movlw	1
   911  0131  00A4               	movwf	??_unharitate
   912  0132  0824               	movf	??_unharitate,w
   913  0133  07A7               	addwf	unharitate@i,f
   914  0134  3003               	movlw	3
   915  0135  0227               	subwf	unharitate@i,w
   916  0136  1C03               	skipc
   917  0137  2906               	goto	l793
   918  0138                     l805:	
   919                           
   920                           ;main.c: 198: }
   921                           ;main.c: 199: }
   922                           ;main.c: 200: return in_state;
   923  0138  0835               	movf	unharitate@in_state,w
   924  0139  0008               	return
   925  013A                     __end_of_unharitate:	
   926                           
   927                           	psect	text2
   928  013A                     __ptext2:	
   929 ;; *************** function _InitApp *****************
   930 ;; Defined at:
   931 ;;		line 22 in file "user.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0
   945 ;;      Params:         0       0
   946 ;;      Locals:         0       0
   947 ;;      Temps:          0       0
   948 ;;      Totals:         0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function _InitApp
   961  013A                     _InitApp:	
   962                           
   963                           ;user.c: 29: OPTION_REG = 0;
   964                           
   965                           ;incstack = 0
   966                           ; Regs used in _InitApp: [wreg+status,2+status,0]
   967  013A  1683               	bsf	3,5	;RP0=1, select bank1
   968  013B  0181               	clrf	1	;volatile
   969                           
   970                           ;user.c: 31: T1CONbits.TMR1GE = 0;
   971  013C  1283               	bcf	3,5	;RP0=0, select bank0
   972  013D  1310               	bcf	16,6	;volatile
   973                           
   974                           ;user.c: 32: T1CONbits.T1CKPS = 1;
   975  013E  0810               	movf	16,w	;volatile
   976  013F  39CF               	andlw	-49
   977  0140  3810               	iorlw	16
   978  0141  0090               	movwf	16	;volatile
   979                           
   980                           ;user.c: 33: T1CONbits.T1OSCEN = 0;
   981  0142  1190               	bcf	16,3	;volatile
   982                           
   983                           ;user.c: 34: T1CONbits.nT1SYNC = 0;
   984  0143  1110               	bcf	16,2	;volatile
   985                           
   986                           ;user.c: 35: T1CONbits.TMR1CS = 0;
   987  0144  1090               	bcf	16,1	;volatile
   988                           
   989                           ;user.c: 36: T1CONbits.TMR1ON = 1;
   990  0145  1410               	bsf	16,0	;volatile
   991                           
   992                           ;user.c: 39: WPUbits.WPU0 = 0;
   993  0146  1683               	bsf	3,5	;RP0=1, select bank1
   994  0147  1015               	bcf	21,0	;volatile
   995                           
   996                           ;user.c: 40: WPUbits.WPU1 = 0;
   997  0148  1095               	bcf	21,1	;volatile
   998                           
   999                           ;user.c: 41: WPUbits.WPU2 = 1;
  1000  0149  1515               	bsf	21,2	;volatile
  1001                           
  1002                           ;user.c: 42: WPUbits.WPU4 = 1;
  1003  014A  1615               	bsf	21,4	;volatile
  1004                           
  1005                           ;user.c: 43: WPUbits.WPU5 = 1;
  1006  014B  1695               	bsf	21,5	;volatile
  1007                           
  1008                           ;user.c: 45: TRISIObits.TRISIO0 = 0;
  1009  014C  1005               	bcf	5,0	;volatile
  1010                           
  1011                           ;user.c: 46: TRISIObits.TRISIO1 = 0;
  1012  014D  1085               	bcf	5,1	;volatile
  1013                           
  1014                           ;user.c: 47: TRISIObits.TRISIO2 = 1;
  1015  014E  1505               	bsf	5,2	;volatile
  1016                           
  1017                           ;user.c: 48: TRISIObits.TRISIO4 = 1;
  1018  014F  1605               	bsf	5,4	;volatile
  1019                           
  1020                           ;user.c: 49: TRISIObits.TRISIO5 = 1;
  1021  0150  1685               	bsf	5,5	;volatile
  1022                           
  1023                           ;user.c: 51: VRCON = 0;
  1024  0151  0199               	clrf	25	;volatile
  1025                           
  1026                           ;user.c: 52: CMCONbits.CM = 7;
  1027  0152  3007               	movlw	7
  1028  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0154  0499               	iorwf	25,f	;volatile
  1030  0155  0008               	return
  1031  0156                     __end_of_InitApp:	
  1032                           
  1033                           	psect	text3
  1034  0172                     __ptext3:	
  1035 ;; *************** function _ConfigureOscillator *****************
  1036 ;; Defined at:
  1037 ;;		line 18 in file "system.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		None
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0
  1051 ;;      Params:         0       0
  1052 ;;      Locals:         0       0
  1053 ;;      Temps:          0       0
  1054 ;;      Totals:         0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _ConfigureOscillator
  1067  0172                     _ConfigureOscillator:	
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _ConfigureOscillator: []
  1071  0172  0008               	return
  1072  0173                     __end_of_ConfigureOscillator:	
  1073                           
  1074                           	psect	text4
  1075  0156                     __ptext4:	
  1076 ;; *************** function _isr *****************
  1077 ;; Defined at:
  1078 ;;		line 23 in file "interrupts.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		None
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0
  1092 ;;      Params:         0       0
  1093 ;;      Locals:         0       0
  1094 ;;      Temps:          0       4
  1095 ;;      Totals:         0       4
  1096 ;;Total ram usage:        4 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		Interrupt level 1
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _isr
  1107  0156                     _isr:	
  1108  0156  0823               	movf	??_isr+3,w
  1109  0157  00DF               	movwf	95
  1110  0158  0822               	movf	??_isr+2,w
  1111  0159  008A               	movwf	10
  1112  015A  0821               	movf	??_isr+1,w
  1113  015B  0084               	movwf	4
  1114  015C  0E20               	swapf	??_isr^0,w
  1115  015D  0083               	movwf	3
  1116  015E  0EDE               	swapf	94,f
  1117  015F  0E5E               	swapf	94,w
  1118  0160  0009               	retfie
  1119  0161                     __end_of_isr:	
  1120  005E                     btemp	set	94	;btemp
  1121  005E                     wtemp0	set	94
  1122                           
  1123                           	psect	intentry
  1124  0004                     __pintentry:	
  1125                           ;incstack = 0
  1126                           ; Regs used in _isr: []
  1127                           
  1128  0004                     interrupt_function:	
  1129  005E                     saved_w	set	btemp
  1130  0004  00DE               	movwf	btemp
  1131  0005  0E03               	swapf	3,w
  1132  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0007  00A0               	movwf	??_isr
  1134  0008  0804               	movf	4,w
  1135  0009  00A1               	movwf	??_isr+1
  1136  000A  080A               	movf	10,w
  1137  000B  00A2               	movwf	??_isr+2
  1138  000C  085F               	movf	btemp+1,w
  1139  000D  00A3               	movwf	??_isr+3
  1140  000E  2956               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    3
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     13      22

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_unharitate

Critical Paths under _isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     599
                                              8 BANK0      5     5      0
                _ConfigureOscillator
                            _InitApp
                         _unharitate
 ---------------------------------------------------------------------------------
 (2) _unharitate                                           4     4      0     269
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _unharitate

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      D      16       4       35.5%
ABS                  0      0      16       5        0.0%
DATA                 0      0      16       6        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jul 08 12:24:09 2017

                           pc 0002                   __CFG_CP$OFF 0000                            l31 0032  
                          l33 003D                            l43 0076                            l36 004C  
                          l28 0024                            l45 0082                            l47 0090  
                          l39 0059                            fsr 0004                           S915 016A  
                         l805 0138                           l825 00A3                           l817 0095  
                         l781 00EA                           l773 00BB                           l853 005A  
                         l793 0106                           l777 00CE                           l785 00F2  
                         l849 0053                           l859 006A                           l797 0120  
                         l799 0128                  __CFG_CPD$OFF 0000                           _isr 0156  
                         fsr0 0004                           indf 0000                          ?_isr 0020  
                        _GPIO 0005                          _main 001B                          btemp 005E  
               __CFG_BOREN$ON 0000                          start 000F               __end_of_InitApp 0156  
                       ??_isr 0020                         ?_main 0020                 __CFG_WDTE$OFF 0000  
                       _VRCON 0099           _ConfigureOscillator 0172                 __CFG_PWRTE$ON 0000  
                       pclath 000A                         status 0003                         wtemp0 005E  
        ?_ConfigureOscillator 0020                __CFG_MCLRE$OFF 0000               __initialization 0010  
                __end_of_main 00B4              main@system_state 0029                        ??_main 0028  
                   ??_InitApp 0000         ??_ConfigureOscillator 0000                        _num_in 0167  
                      saved_w 005E       __end_of__initialization 0019                __pcstackCOMMON 0000  
                  __pbssBANK0 002D                 unharitate@cnt 002D                    __pmaintext 001B  
          unharitate@in_state 0035                    __pintentry 0004                    __stringtab 0161  
                     _WPUbits 0095                       _InitApp 013A                     _CMCONbits 0019  
                     __ptext1 00B4                       __ptext2 013A                       __ptext3 0172  
                     __ptext4 0156                     _T1CONbits 0010                  __size_of_isr 000B  
        end_of_initialization 0019                    _unharitate 00B4   __end_of_ConfigureOscillator 0173  
                  main@inputs 002A                __end_of_num_in 016A           start_initialization 0010  
                 __end_of_isr 0161                   unharitate@i 0027                     ___latbits 0000  
               __pcstackBANK0 0020                   ?_unharitate 0020                      ?_InitApp 0020  
                   __pstrings 0161                     __pswtext1 016A             interrupt_function 0004  
                    _GPIObits 0005                      _PIR1bits 000C           __size_of_unharitate 0086  
                 __stringbase 0166                     main@timer 002B              __size_of_InitApp 001C  
          __end_of__stringtab 0167                 __size_of_main 0099  __size_of_ConfigureOscillator 0001  
                ??_unharitate 0024                      intlevel1 0000                     stringcode 0161  
          __end_of_unharitate 013A                    _OPTION_REG 0081                      stringdir 0161  
                    stringtab 0161             __CFG_FOSC$INTRCIO 0000                    _TRISIObits 0085  
